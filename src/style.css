*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    --color-black: #000000;
    --color-blue: #14213D;
    --color-orange: #FCA311;
    --color-gray: #E5E5E5;
    --color-white: #FFFFFF;

    --font-size-xl: 24px;
    --font-size-l: 20px;
    --font-size-m: 16px;

    --gap: 20px;
    --border-radius: 7px;

    accent-color: var(--color-orange);
}

a,
a:visited {
    color: var(--color-orange);
}

ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.body {
    margin: 0;
    height: 100vh;
    font-family: Palatino, serif;
    background-color: var(--color-blue);
    color: var(--color-gray);

    display: grid;
    grid-template-areas: 'h h' 'a c' 'f f';
    grid-template-rows: auto 1fr auto;
    grid-template-columns: 1fr 2fr;
}

.body.body_drop::after {
    content: "Drop Image Here";
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--color-orange);
    background: rgba(0 0 0 / 0.7);
    border: 5px dashed;
    font-size: calc(var(--font-size-xl) * 3);
    position: fixed;
    inset: 0;
    pointer-events: none;
}

.header {
    grid-area: h;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 3px solid var(--color-orange);
    padding: 0 var(--gap);
    height: 60px;
}

@media (display-mode: window-controls-overlay) { 
    .header {
        padding-right: calc(2 * env(titlebar-area-x));
        padding-left: env(titlebar-area-x);
        height: calc(env(titlebar-area-height) + 10px);
    }
}

.header__title {
    padding: 0;
    margin: 0;
    font-size: var(--font-size-xl);
    flex: 1;
    -webkit-app-region: drag;
    app-region: drag;
}

.header__actions {
    list-style: none;
    display: flex;
}

.header__action {
    margin-left: var(--gap);
}

.button {
    display: inline-flex;
    font-family: inherit;
    background-color: var(--color-orange);
    color: var(--color-black);
    cursor: pointer;
    padding: 0;
    border: none;
    font-size: var(--font-size-m);
    padding: 0.5em 1em;
    border-radius: var(--border-radius);
}

.button:not(:disabled):is(:hover, :focus) {
    filter: brightness(1.2);
}

.button:disabled {
    filter: brightness(0.8);
    cursor: not-allowed;
}

.pwa-install-button {
    display: none;
    transition: display 1s ease;
}

.pwa-install-button_visible {
    display: inline-flex;
}

@media (display-mode: standalone), (display-mode: window-controls-overlay) {
    .pwa-install-button {
        display: none;
    }
}

.aside {
    grid-area: a;
    border-right: 3px solid var(--color-orange);
    max-height: 100%;
    min-width: 320px;
    overflow-y: auto;
    font-size: var(--font-size-m);
}

.aside__section details {
    padding: calc(var(--gap) / 2) var(--gap);
    border-bottom: 1px solid var(--color-orange);
}

.aside__section summary {
    font-size: var(--font-size-l);
    color: var(--color-orange);
    cursor: pointer;
}

.borders__cards {
    display: grid;
    grid-gap: var(--gap);
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

.border__selector {
    display: block;
    font-family: inherit;
    background-color: transparent;
    cursor: pointer;
    padding: 0;
    border: none;
    padding: var(--gap);
    border-radius: var(--border-radius);
    transition: scale 0.3s ease;
}

.border__selector:is(:hover, :focus) {
    scale: 1.1;
}

.border__selector img {
    height: 100%;
    width: 100%;
    object-fit: contain;
    aspect-ratio: 1 / 1;
}

.editor {
    grid-area: c;
    position: relative;
    background-color: var(--color-white);
    background-image:
        linear-gradient(45deg, #eee 25%, transparent 25%),
        linear-gradient(-45deg, #eee 25%, transparent 25%),
        linear-gradient(45deg, transparent 75%, #eee 75%),
        linear-gradient(-45deg, transparent 75%, #eee 75%);
    background-size: 60px 60px;
    background-position: 0 0, 0 30px, 30px -30px, -30px 0px;
    overflow: hidden;
}

#canvas {
    width: 1000px;
    height: 1000px;
}

.input-group, .input-group label {
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
}

input,
select {
    accent-color: var(--color-orange);
    font: inherit;
}

input[type="color"].color-input {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background: none;
    border: 1px solid var(--color-gray);
    cursor: pointer;
    padding: 0;
    height: 2em;
    width: 2em;
    border-radius: 50%;
    overflow: hidden;
}
::-webkit-color-swatch-wrapper {
    padding: 0;
}
::-webkit-color-swatch {
    border: 0;
    border-radius: 0;
}
::-moz-color-swatch {
    border: 0;
}

.mask-size-input {
    background-color: transparent;
    border: none;
    color: var(--color-orange);
    border-bottom: 1px solid var(--color-orange);
    width: 5em;
}

.footer {
    height: 40px;
    grid-area: f;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top: 3px solid var(--color-orange);
    padding: 0 var(--gap);
}

.footer__items {
    list-style: none;
    display: flex;
    align-items: center;
}

.footer__item {
    margin-right: calc(var(--gap) / 2);
}

.footer__item:not(:last-child)::after {
    content: '|';
    margin-left: calc(var(--gap) / 2);
    color: var(--color-gray);
    opacity: 0.5;
}

.settings {
    padding: var(--gap) 0;
    display: flex;
    flex-direction: column;
    gap: var(--gap);
}

.settings__item {
    display: inline-flex;
    gap: calc(var(--gap) / 2);
}

.input-checkbox {
    width: 1.5em;
    height: 1.5em;
}

.icon {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-size: 100% 100%;
    background-position: center center;
    margin-right: 0.25em;
}

.icon_install {
    background-image: url(./svg/folder-down.svg);
}
.icon_load {
    background-image: url(./svg/image.svg);
}
.icon_save {
    background-image: url(./svg/download.svg);
}
.icon_plus {
    background-image: url(./svg/plus.svg);
}
.icon_minus {
    background-image: url(./svg/minus.svg);
}
.icon_upload {
    background-image: url(./svg/upload.svg);
}

.input-range {
    flex: 1;
}

.text__controls {
    margin-top: var(--gap);
}

.text__settings {
    margin-top: var(--gap);
    margin-bottom: var(--gap);
    display: flex;
    flex-direction: column;
    gap: var(--gap);
}

.hidden:not(#not_exist) {
    display: none;
}

.select-wrapper {
    display: grid;
    max-width: 100%;
    grid-template-areas: "select";
    align-items: center;
}

.select {
    appearance: none;
    width: 100%;
    grid-area: select;
}

.select-wrapper::after {
    content: "";
    grid-area: select;
    justify-self: end;
    width: 0.8em;
    height: 0.5em;
    background-color: var(--color-blue);
    clip-path: polygon(100% 0%, 0 0%, 50% 100%);
    margin-right: 0.5em;
    pointer-events: none;
}

@media (width < 860px) {
    .body {
        grid-template-areas: 'h h' 'a a' 'c c' 'f f';
        grid-template-rows: auto auto auto auto;
        height: auto;
    }

    .editor {
        max-height: 90vh;
        height: 100vw;
    }

    .header {
        display: grid;
        gap: var(--gap);
        grid-template-columns: max-content 1fr;
    }

    .header__action {
        margin-right: var(--gap);
        margin-left: 0;
    }

    .header__actions {
        overflow: auto hidden;
        scrollbar-width: none;
        margin-right: calc(-1 * var(--gap));
    }

    .header__actions li {
        min-width: max-content;
    }

    .aside {
        max-height: none;
        height: auto;
        border-right: none;
        border-bottom: 3px solid var(--color-orange);
    }
}

@media (width <= 500px) {
    :root {
        --gap: 10px;
    }
    
    .header {
        grid-template-columns: 1fr;
        height: auto;
        padding: var(--gap);
    }

    .header__actions {
        overflow: auto;
        margin-right: 0;
        display: flex;
        flex-direction: column;
        gap: var(--gap);
    }

    .header__action {
        margin: 0;
        display: flex;
        width: 100%;
        justify-content: center;
    }

    .borders__cards {
        grid-template-columns: repeat(auto-fit, minmax(90px, 1fr));
    }
}